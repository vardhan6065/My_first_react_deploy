{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd sem\\\\web tech\\\\react\\\\lect27\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear); // console.log(selectedYear);\n  }; //The filter() method creates a new array with all elements that pass the test implemented by the provided function\n  //const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n  //const result = words.filter(word => word.length > 6);\n\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n        items: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"qEHuNOnIiaD6hOrQdq7QVeww9AM=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["D:/3rd sem/web tech/react/lect27/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpensesFilter","ExpenseList","ExpensesChart","Card","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BR,QAAQ,CAAC,MAAD,CAA7C;;AACA,QAAMS,mBAAmB,GAAEC,YAAY,IAAE;AACrCF,IAAAA,eAAe,CAACE,YAAD,CAAf,CADqC,CAErC;AACH,GAHD,CAFqB,CAOrB;AACA;AACA;;;AAEA,QAAMC,gBAAgB,GAACL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAG;AAChD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAAwCV,YAA/C;AACH,GAFsB,CAAvB;AAOA,sBACI;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA,YAA1B;AAAwC,QAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADA,eAYI,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH;;GApFQN,Q;;KAAAA,Q;AAsFT,eAAeA,QAAf","sourcesContent":["import React , {useState} from \"react\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear,setFilteredYear]=useState('2021');\r\n    const filterChangeHandler= selectedYear=>{\r\n        setFilteredYear(selectedYear);\r\n        // console.log(selectedYear);\r\n    };\r\n \r\n    //The filter() method creates a new array with all elements that pass the test implemented by the provided function\r\n    //const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\r\n    //const result = words.filter(word => word.length > 6);\r\n\r\n    const filteredExpenses=props.items.filter(expense =>{\r\n        return expense.date.getFullYear().toString()===filteredYear;\r\n    });\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <li>\r\n        <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n\r\n            {/* {props.items.map((expense) => (\r\n                <ExpenseItem \r\n                key={expense.id}\r\n                title={expense.title}\r\n                amnt={expense.amount}\r\n                date={expense.date}\r\n                />\r\n            ))} */}\r\n\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpenseList items={filteredExpenses}/>\r\n\r\n            {/* {filteredExpenses.length ===0 ? (\r\n                <p>No expenses found.</p>\r\n            ):(\r\n                filteredExpenses.map((expense) => (\r\n                    <ExpenseItem \r\n                    key={expense.id}\r\n                        title={expense.title}\r\n                        amnt={expense.amount}\r\n                        date={expense.date}\r\n                    />\r\n                ))\r\n            )\r\n\r\n            } */}\r\n\r\n            {/* {filteredExpenses.length===0 && <p>No expenses found</p>}\r\n            {filteredExpenses.length >0 && filteredExpenses.map((expense)=>(\r\n                <ExpenseItem \r\n                key={expense.id}\r\n                    title={expense.title}\r\n                    amnt={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))} */}\r\n\r\n\r\n            {/* <ExpenseItem\r\n                title={props.items[0].title}\r\n                amnt={props.items[0].amount}\r\n                date={props.items[0].date}\r\n            />\r\n            <ExpenseItem\r\n                title={props.items[1].title}\r\n                amnt={props.items[1].amount}\r\n                date={props.items[1].date}\r\n            />\r\n            <ExpenseItem\r\n                title={props.items[2].title}\r\n                amnt={props.items[2].amount}\r\n                date={props.items[2].date}\r\n            />\r\n            <ExpenseItem\r\n                title={props.items[3].title}\r\n                amnt={props.items[3].amount}\r\n                date={props.items[3].date}\r\n            /> */}\r\n        </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}